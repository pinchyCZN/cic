//////////////////////////////////////////////////////////////
// entry point
//////////////////////////////////////////////////////////////

0x000 : 32 	lbmx 2			BM = 0x2                     		
0x001 : 22 	lblx 2			BL = 0x2                     		
0x002 : 68 	ex				B = SB					SB = 0x22
0x003 : 22 	lblx 2			BL = 0x2                     		
0x004 : 11 	lax 1			A = 0x1                      		
0x005 : 75 	out				PRj = A					Port2 = 0x1

0x006 : 4E 	tpb 2			Skip if P[Bl].2 set    
0x007 : 8C 	tr C			Jump C					if(Port2.2) {
0x008 : D9 	trs 32			Call 132					Call 132       	// latch Port2.0 on rising edge of Port2.1, with small delay
0x009 : 6E	tc				Skip if C set           if(C == 0)     	// if Port2.0 is low, crash
0x00A : 8A	tr A			Freeze                  	HANG;
0x00B : 8F	tr F			Jump F           		} else {   	      
0x00C : 10	lax 0		  	A = 0x0                      		    
0x00D : 75	out				PRj = A                 	Port2 = 0;
0x00E : C9	trs 12			Call 112   		    		Call 112		// latch Port2.0 on rising edge of Port2.1
													}            			// without small delay
0x00F : 10	lax 0		  	A = 0x0                      		
0x010 : C3	trs 06			Call 106             	Write_Port(0);		// write 0 on falling edge of clock
0x011 : 10	lax 0		  	A = 0x0                      		
0x012 : C3	trs 06			Call 106             	Write_Port(0);		// write 0 on falling edge of clock
0x013 : 11	lax 1		  	A ? 0x1                      		
0x014 : C3	trs 06			Call 106           		Write_Port(1);		// write 1 on falling edge of clock
0x015 : F0 C0	call 300	Call 300              	  	
0x017 : F0 AF	call 22F	Call 22F              	  	
0x019 : 2A 	lblx A		 	BL ? 0xA                     	
0x01A : F0 8F	call 20F	Call 20F                	
0x01C : 78 	incb		 	BL ++,		 			Skip if BL == 0xF     	
0x01D : 9A 	tr 1A			Jump 1A                     	
0x01E : F0 C6	call 306	Call 306                	
0x020 : F1 A2	call 622	Call 622                	
0x022 : F0 A0	call 220	Call 220                	
0x024 : 30 	lbmx 0		 	BM ? 0x0                     	
0x025 : 20 	lblx 0		 	BL ? 0x0                     	
0x026 : C2 	trs 04			Call 104                   	
0x027 : F0 8F	call 20F	Call 20F                	
0x029 : 78 	incb		 	BL ++,		 Skip if BL == 0xF     	
0x02A : A7 	tr 27			Jump 27                     	
0x02B : E1 80	tl 600		Jump 600                 	
0x02D : 00 	nop		                                 	
0x02E : 00 	nop		                                 	
0x02F : 00 	nop		                                 	
0x030 : 00 	nop		                                 	
0x031 : 00 	nop		                                 	
0x032 : 00 	nop		                                 	
0x033 : 00 	nop		                                 	
0x034 : 00 	nop		                                 	
0x035 : 00 	nop		                                 	
0x036 : 00 	nop		                                 	
0x037 : 00 	nop		                                 	
0x038 : 00 	nop		                                 	
0x039 : 00 	nop		                                 	
0x03A : 00 	nop		                                 	
0x03B : 00 	nop		                                 	
0x03C : 00 	nop		                                 	
0x03D : 00 	nop		                                 	
0x03E : 00 	nop		                                 	
0x03F : 00 	nop	



	                                 	
0x100 : E1 40	tl 500				 Jump 500                 	
0x102 : 82 	tr 2				 Freeze                       	
0x103 : 82 	tr 2				 Freeze                      	
0x104 : 10 	lax 0		  A ? 0x0                      	
0x105 : 86 	tr 6				 Jump 6     


//////////////////////////////////////////////////////////////
// Write Value onto Port on FALLING EDGE of Port[x].1
//////////////////////////////////////////////////////////////     	
0x106 : 68 	ex 		  B ? SB                         	B <> SB;
0x107 : 4D 	tpb 1				 Skip if P[Bl].1 set    while(Port[x].1);     	
0x108 : 8A 	tr A				 Jump A                       	
0x109 : 87 	tr 7				 Jump 7                       	
0x10A : 75 	out		PRj ? A                          	Port[x] = A;
0x10B : 4D 	tpb 1				 Skip if P[Bl].1 set    while(!Port[x].1);       	
0x10C : 8B 	tr B				 Jump B                       	
0x10D : 11 	lax 1		  A ? 0x1                      	
0x10E : 75 	out		PRj ? A                          	Port[x] = 0x1;
0x10F : 68 	ex 		  B ? SB                         	B <> SB;
0x110 : 7D 	rtn				 Return                 Return       	
0x111 : 00 	nop		

//////////////////////////////////////////////////////////////
// wait for Port2.1 FALLING EDGE     
//////////////////////////////////////////////////////////////                             	
0x112 : 68 	ex 		  B ? SB                         	B <> SB;
0x113 : 61 	sc 		  C ? SetBit                     	C = 1;
0x114 : 2F 	lblx F		 BL ? 0xF                     		
0x115 : 10 	lax 0		  A ? 0x0                      	
0x116 : 75 	out		PRj ? A                          	RegF = 0;
0x117 : 22 	lblx 2		 BL ? 0x2                     	
0x118 : 4D 	tpb 1				 Skip if P[Bl].1 set    while(Port2.1);		// wait for falling edge
0x119 : 9B 	tr 1B				 Jump 1B                     	
0x11A : 98 	tr 18				 Jump 18     


// re-ordered
//////////////////////////////////////////////////////////////
// wait for Port2.1 FALLING EDGE and DELAY 3 CYCLES
//////////////////////////////////////////////////////////////
0x132 : 68 	ex 		  B ? SB                         	SB <> B;  	(0x22)
0x133 : 61 	sc 		  C ? SetBit                     	C = 1;
0x134 : 2F 	lblx F		 BL ? 0xF                     		
0x135 : 10 	lax 0		  A ? 0x0                      	
0x136 : 75 	out		PRj ? A                          	RegF = 0;
0x137 : 22 	lblx 2		 BL ? 0x2                     	
0x138 : 4D 	tpb 1				 Skip if P[Bl].1 set    while(Port2.1);		// wait for falling edge
0x139 : BB 	tr 3B				 Jump 3B                     	
0x13A : B8 	tr 38				 Jump 38                 	
0x13B : 1D 	lax D		  A ? 0xD                      		A = 0xD;		// increment A from 13 to 15
0x13C : 01 	adx 1		  A ++		 Skip if Cy set         while(A++ < 16);
0x13D : BC 	tr 3C				 Jump 3C                
0x13E : 9B 	tr 1B				 Jump 1B                Goto 0x1B
0x13F : 00 	nop

// re-ordered
//////////////////////////////////////////////////////////////
// wait for Port2.1 RISING EDGE   
////////////////////////////////////////////////////////////// 	
0x11B : 4C 	tpb 0				 Skip if P[Bl].0 set    if(!Port2.0)     	
0x11C : 60 	rc 		  C ? ClrBit                     	    C = 0;
0x11D : 2F 	lblx F		 BL ? 0xF                     		
0x11E : 11 	lax 1		  A ? 0x1                      	
0x11F : 75 	out		PRj ? A                         	RegF = 0x1; 	
0x120 : 22 	lblx 2		 BL ? 0x2                     		
0x121 : 4D 	tpb 1				 Skip if P[Bl].1 set    while(!Port2.1);    	// wait for rising edge
0x122 : A1 	tr 21				 Jump 21                     	
0x123 : 68 	ex 		  B ? SB                         	SB <> B;		
0x124 : 7D 	rtn				 Return       		Return
0x125 : 00 	nop

// re-ordered
  	
//////////////////////////////////////////////////////////////
// Increment B and VENDOR UNKNOWN
//////////////////////////////////////////////////////////////                                 	
0x126 : 68 	ex 		  B ? SB                         	B <> SB;		// Before: SB = 0x40; B = 0x0C;
0x127 : 61 	sc 		  C ? SetBit                     	C = 1;			// After:  SB = 0x0C; B = 0x40;
0x128 : 69 04	UNK		VENDOR COMMAND (dr)            		???????????????????????????????????
0x12A : 60 	rc 		  C ? ClrBit                    	C = 0; 	
0x12B : 78 	incb		 BL ++,		 Skip if BL == 0xF     	B++;
0x12C : B0 	tr 30				 Jump 30                if(BL < 0xF) 
									    goto 30;    	
0x12D : 66 	exbm 		 BM ? A                        		else 
									    BM <> A;
0x12E : 01 	adx 1		  A ++		 Skip if Cy set        	A++; 
									if(!Cy)
0x12F : 66 	exbm 		 BM ? A                        		    BM <> A;
0x130 : 68 	ex 		  B ? SB                         	B <> SB;		// Before: SB = 0x0C; B = 0x41;
0x131 : 7D 	rtn				 Return                 Return 			// After:  SB = 0x41; B = 0x0C;

		                                 	







0x200 : 1F 	lax F		  A ? 0xF                      	
0x201 : 54 	exc 0		  M ? A, BM XOR 0              	
0x202 : C9 	trs 12				 Call 112                   	
0x203 : 6E 	tc				 Skip if C set                  	
0x204 : 43 	rm 3		M.3 ? ClrBit                    	
0x205 : C9 	trs 12				 Call 112                   	
0x206 : 6E 	tc				 Skip if C set                  	
0x207 : 42 	rm 2		M.2 ? ClrBit                    	
0x208 : C9 	trs 12				 Call 112                   	
0x209 : 6E 	tc				 Skip if C set                  	
0x20A : 41 	rm 1		M.1 ? ClrBit                    	
0x20B : C9 	trs 12				 Call 112                   	
0x20C : 6E 	tc				 Skip if C set                  	
0x20D : 40 	rm 0		M.0 ? ClrBit                    	
0x20E : 7D 	rtn				 Return                        	
0x20F : 11 	lax 1		  A ? 0x1                      	
0x210 : 4B 	tm 3				 Skip if M.3 set              	
0x211 : 10 	lax 0		  A ? 0x0                      	
0x212 : C3 	trs 06				 Call 106                   	
0x213 : 11 	lax 1		  A ? 0x1                      	
0x214 : 4A 	tm 2				 Skip if M.2 set              	
0x215 : 10 	lax 0		  A ? 0x0                      	
0x216 : C3 	trs 06				 Call 106                   	
0x217 : 11 	lax 1		  A ? 0x1                      	
0x218 : 49 	tm 1				 Skip if M.1 set              	
0x219 : 10 	lax 0		  A ? 0x0                      	
0x21A : C3 	trs 06				 Call 106                   	
0x21B : 11 	lax 1		  A ? 0x1                      	
0x21C : 48 	tm 0				 Skip if M.0 set              	
0x21D : 10 	lax 0		  A ? 0x0                      	
0x21E : E0 46	tl 106				 Jump 106                 	
0x220 : F0 AB	call 22B			 Call 22B                	
0x222 : F0 AB	call 22B			 Call 22B                	
0x224 : F0 AB	call 22B			 Call 22B                	
0x226 : AB 	tr 2B				 Jump 2B                     	
0x227 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x228 : 00 	nop		                                 	
0x229 : 7A 	add		  A += M                         	
0x22A : 54 	exc 0		  M ? A, BM XOR 0              	
0x22B : 50 	lda 0		  A ? M, BM XOR 0              	
0x22C : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x22D : A7 	tr 27				 Jump 27                     	
0x22E : 7D 	rtn				 Return                        	
0x22F : 30 	lbmx 0		 BM ? 0x0                     	
0x230 : 2A 	lblx A		 BL ? 0xA                     	
0x231 : 1B 	lax B		  A ? 0xB                      	
0x232 : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x233 : 15 	lax 5		  A ? 0x5                      	
0x234 : 5C 	excd 0		  M ? A, BL--, BM XOR 0	 Skip if Cy	
0x235 : F0 AB	call 22B			 Call 22B                	
0x237 : 2A 	lblx A		 BL ? 0xA                     	
0x238 : AB 	tr 2B				 Jump 2B                     	
0x239 : 00 	nop		                                 	
0x23A : 00 	nop		                                 	
0x23B : 00 	nop		                                 	
0x23C : 00 	nop		                                 	
0x23D : 00 	nop		                                 	
0x23E : 00 	nop		                                 	
0x23F : 00 	nop		                                 	




//////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////
0x300 : 34 	lbmx 4		 BM ? 0x4                     		
0x301 : 20 	lblx 0		 BL ? 0x0                     		
0x302 : 68 	ex 		  B ? SB                         	SB = 0x40;
0x303 : 30 	lbmx 0		 BM ? 0x0                     	
0x304 : 2C 	lblx C		 BL ? 0xC                     		B = 0x0C;
0x305 : 8B 	tr B				 Jump B                 Goto 0xB;		// Write 0xF to Ram(0x0C)
      	
0x306 : 35 	lbmx 5		 BM ? 0x5                     	
0x307 : 20 	lblx 0		 BL ? 0x0                     	
0x308 : 68 	ex 		  B ? SB                         	
0x309 : 30 	lbmx 0		 BM ? 0x0                     	
0x30A : 24 	lblx 4		 BL ? 0x4   
                  	
0x30B : 1F 	lax F		  A ? 0xF                      		
0x30C : 54 	exc 0		  M ? A, BM XOR 0              		M(B) = 0xF;
0x30D : D3 	trs 26				 Call 126                   	
0x30E : 6E 	tc				 Skip if C set                  	
0x30F : 43 	rm 3		M.3 ? ClrBit                    	
0x310 : D3 	trs 26				 Call 126                   	
0x311 : 6E 	tc				 Skip if C set                  	
0x312 : 42 	rm 2		M.2 ? ClrBit                    	
0x313 : D3 	trs 26				 Call 126                   	
0x314 : 6E 	tc				 Skip if C set                  	
0x315 : 41 	rm 1		M.1 ? ClrBit                    	
0x316 : D3 	trs 26				 Call 126                   	
0x317 : 6E 	tc				 Skip if C set                  	
0x318 : 40 	rm 0		M.0 ? ClrBit                    	
0x319 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x31A : 8B 	tr B				 Jump B                       	
0x31B : 32 	lbmx 2		 BM ? 0x2                     	
0x31C : 22 	lblx 2		 BL ? 0x2                     	
0x31D : 68 	ex 		  B ? SB                         	
0x31E : 7D 	rtn				 Return                        	
0x31F : 30 	lbmx 0		 BM ? 0x0                     	
0x320 : 20 	lblx 0		 BL ? 0x0                     	
0x321 : 10 	lax 0		  A ? 0x0                      	
0x322 : 55 	exc 1		  M ? A, BM XOR 1              	
0x323 : 10 	lax 0		  A ? 0x0                      	
0x324 : 55 	exc 1		  M ? A, BM XOR 1              	
0x325 : 10 	lax 0		  A ? 0x0                      	
0x326 : 65 	atx 		  X ? A                         	
0x327 : AC 	tr 2C				 Jump 2C                     	
0x328 : 55 	exc 1		  M ? A, BM XOR 1              	
0x329 : AB 	tr 2B				 Jump 2B                     	
0x32A : 54 	exc 0		  M ? A, BM XOR 0              	
0x32B : 64 	exax 		  A ? X                        	
0x32C : F1 B7	call 637			 Call 637                	
0x32E : 01 	adx 1		  A ++		 Skip if Cy set        	
0x32F : AC 	tr 2C				 Jump 2C                     	
0x330 : 64 	exax 		  A ? X                        	
0x331 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x332 : AB 	tr 2B				 Jump 2B                     	
0x333 : 54 	exc 0		  M ? A, BM XOR 0              	
0x334 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x335 : AA 	tr 2A				 Jump 2A                     	
0x336 : 55 	exc 1		  M ? A, BM XOR 1              	
0x337 : 54 	exc 0		  M ? A, BM XOR 0              	
0x338 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x339 : A8 	tr 28				 Jump 28                     	
0x33A : C2 	trs 04				 Call 104                   	
0x33B : E1 0E	tl 40E				 Jump 40E                 	
0x33D : 00 	nop		                                 	
0x33E : 00 	nop		                                 	
0x33F : 00 	nop		                                 	




0x400 : 19 	lax 9		  A ? 0x9                      	
0x401 : 4A 	tm 2				 Skip if M.2 set              	
0x402 : F1 88	call 608			 Call 608                	
0x404 : B5 	tr 35				 Jump 35                     	
0x405 : 5A 	exci 2		  M ? A, BL++, BM XOR 2	 Skip if Cy	
0x406 : 71 	outl		P0i ? A                         	
0x407 : C3 	trs 06				 Call 106                   	
0x408 : DE 	trs 3C				 Call 13C                   	
0x409 : 61 	sc 		  C ? SetBit                     	
0x40A : 10 	lax 0		  A ? 0x0                      	
0x40B : ED 9E	tl 361E				 Jump 361E               	
0x40D : 8C 	tr C				 Jump C                       	
0x40E : C9 	trs 12				 Call 112                   	
0x40F : 6E 	tc				 Skip if C set                  	
0x410 : 98 	tr 18				 Jump 18                     	
0x411 : C9 	trs 12				 Call 112                   	
0x412 : 6E 	tc				 Skip if C set                  	
0x413 : E1 C0	tl 700				 Jump 700                 	
0x415 : 60 	rc 		  C ? ClrBit                     	
0x416 : E0 DF	tl 31F				 Jump 31F                 	
0x418 : C9 	trs 12				 Call 112                   	
0x419 : 6E 	tc				 Skip if C set                  	
0x41A : 9C 	tr 1C				 Jump 1C                     	
0x41B : C1 	trs 02				 Call 102                   	
0x41C : 30 	lbmx 0		 BM ? 0x0                     	
0x41D : C0 	trs 00				 Call 100                   	
0x41E : C0 	trs 00				 Call 100                   	
0x41F : C0 	trs 00				 Call 100                   	
0x420 : 31 	lbmx 1		 BM ? 0x1                     	
0x421 : C0 	trs 00				 Call 100                   	
0x422 : C0 	trs 00				 Call 100                   	
0x423 : C0 	trs 00				 Call 100                   	
0x424 : 31 	lbmx 1		 BM ? 0x1                     	
0x425 : 27 	lblx 7		 BL ? 0x7                     	
0x426 : 50 	lda 0		  A ? M, BM XOR 0              	
0x427 : 0F 	adx F		  A += 0xF		 Skip if Cy set    	
0x428 : 10 	lax 0		  A ? 0x0                      	
0x429 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x42A : 67 	exbl 		 BL ? A                        	
0x42B : C9 	trs 12				 Call 112                   	
0x42C : 31 	lbmx 1		 BM ? 0x1                     	
0x42D : 11 	lax 1		  A ? 0x1                      	
0x42E : 48 	tm 0				 Skip if M.0 set              	
0x42F : 10 	lax 0		  A ? 0x0                      	
0x430 : C3 	trs 06				 Call 106                   	
0x431 : 30 	lbmx 0		 BM ? 0x0                     	
0x432 : 6E 	tc				 Skip if C set                  	
0x433 : B9 	tr 39				 Jump 39                     	
0x434 : 48 	tm 0				 Skip if M.0 set              	
0x435 : C1 	trs 02				 Call 102                   	
0x436 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x437 : AB 	tr 2B				 Jump 2B                     	
0x438 : 8E 	tr E				 Jump E                       	
0x439 : 48 	tm 0				 Skip if M.0 set              	
0x43A : B6 	tr 36				 Jump 36                     	
0x43B : B5 	tr 35				 Jump 35                     	
0x43C : 00 	nop		                                 	
0x43D : 00 	nop		                                 	
0x43E : 00 	nop		                                 	
0x43F : 00 	nop		                                 	



0x500 : 2F 	lblx F		 BL ? 0xF                     	
0x501 : 50 	lda 0		  A ? M, BM XOR 0              	
0x502 : 65 	atx 		  X ? A                         	
0x503 : 61 	sc 		  C ? SetBit                     	
0x504 : 21 	lblx 1		 BL ? 0x1                     	
0x505 : 7B 	adc		  A += M + C, C ? Cy	 Skip if Cy set	
0x506 : 61 	sc 		  C ? SetBit                     	
0x507 : 54 	exc 0		  M ? A, BM XOR 0              	
0x508 : 50 	lda 0		  A ? M, BM XOR 0              	
0x509 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x50A : 7B 	adc		  A += M + C, C ? Cy	 Skip if Cy set	
0x50B : 61 	sc 		  C ? SetBit                     	
0x50C : 79 	coma		  A ? ~A                        	
0x50D : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x50E : 7B 	adc		  A += M + C, C ? Cy	 Skip if Cy set	
0x50F : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x510 : 7A 	add		  A += M                         	
0x511 : 54 	exc 0		  M ? A, BM XOR 0              	
0x512 : 50 	lda 0		  A ? M, BM XOR 0              	
0x513 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x514 : 7A 	add		  A += M                         	
0x515 : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x516 : 08 	adx 8		  A += 0x8		 Skip if Cy set    	
0x517 : 7A 	add		  A += M                         	
0x518 : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x519 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x51A : 00 	nop		                                 	
0x51B : 7A 	add		  A += M                         	
0x51C : 54 	exc 0		  M ? A, BM XOR 0              	
0x51D : 50 	lda 0		  A ? M, BM XOR 0              	
0x51E : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x51F : 99 	tr 19				 Jump 19                     	
0x520 : 64 	exax 		  A ? X                        	
0x521 : 0F 	adx F		  A += 0xF		 Skip if Cy set    	
0x522 : 7D 	rtn				 Return                        	
0x523 : 82 	tr 2				 Jump 2                       	
0x524 : 00 	nop		                                 	
0x525 : 00 	nop		                                 	
0x526 : 00 	nop		                                 	
0x527 : 00 	nop		                                 	
0x528 : 00 	nop		                                 	
0x529 : 00 	nop		                                 	
0x52A : 00 	nop		                                 	
0x52B : 00 	nop		                                 	
0x52C : 00 	nop		                                 	
0x52D : 00 	nop		                                 	
0x52E : 00 	nop		                                 	
0x52F : 00 	nop		                                 	
0x530 : 00 	nop		                                 	
0x531 : 00 	nop		                                 	
0x532 : 00 	nop		                                 	
0x533 : 00 	nop		                                 	
0x534 : 00 	nop		                                 	
0x535 : 00 	nop		                                 	
0x536 : 00 	nop		                                 	
0x537 : 00 	nop		                                 	
0x538 : 00 	nop		                                 	
0x539 : 00 	nop		                                 	
0x53A : 00 	nop		                                 	
0x53B : 00 	nop		                                 	
0x53C : 00 	nop		                                 	
0x53D : 00 	nop		                                 	
0x53E : 00 	nop		                                 	
0x53F : 00 	nop		                                 	



0x600 : 30 	lbmx 0		 BM ? 0x0                     		B = 0;
0x601 : 20 	lblx 0		 BL ? 0x0                     	
0x602 : 10 	lax 0		  A ? 0x0                      		A = 0;
0x603 : 54 	exc 0		  M ? A, BM XOR 0              		M[0] = 0;
0x604 : 68 	ex 		  B ? SB                         	SB = 0;
0x605 : 31 	lbmx 1		 BM ? 0x1                     		B = 0x11;
0x606 : 21 	lblx 1		 BL ? 0x1                     	
0x607 : 1B 	lax B		  A ? 0xB                      		M[0x11] = 0xB;
0x608 : 59 	exci 1		  M ? A, BL++, BM XOR 1	 Skip if Cy	B = 0x02;
0x609 : 68 	ex 		  B ? SB                         	B <> SB;
0x60A : 14 	lax 4		  A ? 0x4                      	
0x60B : 65 	atx 		  X ? A                         	X = 0x4;	
0x60C : 50 	lda 0		  A ? M, BM XOR 0              		A = M[0];
0x60D : 01 	adx 1		  A ++		 Skip if Cy set        	
0x60E : 54 	exc 0		  M ? A, BM XOR 0              	
0x60F : 68 	ex 		  B ? SB                         	
0x610 : 6A 00	UNK		VENDOR COMMAND (pat)           	
0x612 : 55 	exc 1		  M ? A, BM XOR 1              	
0x613 : 64 	exax 		  A ? X                        	
0x614 : 59 	exci 1		  M ? A, BL++, BM XOR 1	 Skip if Cy	
0x615 : 89 	tr 9				 Jump 9                       	
0x616 : 32 	lbmx 2		 BM ? 0x2                     	
0x617 : 22 	lblx 2		 BL ? 0x2                     	
0x618 : 68 	ex 		  B ? SB                         	
0x619 : 30 	lbmx 0		 BM ? 0x0                     	
0x61A : 21 	lblx 1		 BL ? 0x1                     	
0x61B : F0 80	call 200			 Call 200                	
0x61D : 31 	lbmx 1		 BM ? 0x1                     	
0x61E : F0 80	call 200			 Call 200                	
0x620 : E1 0E	tl 40E				 Jump 40E                 	
0x622 : 30 	lbmx 0		 BM ? 0x0                     	
0x623 : 22 	lblx 2		 BL ? 0x2                     	
0x624 : 64 	exax 		  A ? X                        	
0x625 : 4D 	tpb 1				 Skip if P[Bl].1 set         	
0x626 : A8 	tr 28				 Jump 28                     	
0x627 : AE 	tr 2E				 Jump 2E                     	
0x628 : 7A 	add		  A += M                         	
0x629 : 20 	lblx 0		 BL ? 0x0                     	
0x62A : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x62B : 64 	exax 		  A ? X                        	
0x62C : 5C 	excd 0		  M ? A, BL--, BM XOR 0	 Skip if Cy	
0x62D : 7D 	rtn				 Return                        	
0x62E : 01 	adx 1		  A ++		 Skip if Cy set        	
0x62F : A5 	tr 25				 Jump 25                     	
0x630 : 64 	exax 		  A ? X                        	
0x631 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x632 : A4 	tr 24				 Jump 24                     	
0x633 : 54 	exc 0		  M ? A, BM XOR 0              	
0x634 : 01 	adx 1		  A ++		 Skip if Cy set        	
0x635 : 54 	exc 0		  M ? A, BM XOR 0              	
0x636 : A5 	tr 25				 Jump 25                     	
0x637 : 00 	nop		                                 	
0x638 : 00 	nop		                                 	
0x639 : 00 	nop		                                 	
0x63A : 7D 	rtn				 Return                        	
0x63B : 00 	nop		                                 	
0x63C : 00 	nop		                                 	
0x63D : 00 	nop		                                 	
0x63E : 00 	nop		                                 	
0x63F : 00 	nop		                                 	



0x700 : 32 	lbmx 2		 BM ? 0x2                     	
0x701 : 20 	lblx 0		 BL ? 0x0                     	
0x702 : 1A 	lax A		  A ? 0xA                      	
0x703 : 54 	exc 0		  M ? A, BM XOR 0              	
0x704 : F0 8F	call 20F			 Call 20F                	
0x706 : F0 8F	call 20F			 Call 20F                	
0x708 : 1F 	lax F		  A ? 0xF                      	
0x709 : 64 	exax 		  A ? X                        	
0x70A : 64 	exax 		  A ? X                        	
0x70B : 0F 	adx F		  A += 0xF		 Skip if Cy set    	
0x70C : 97 	tr 17				 Jump 17                     	
0x70D : 64 	exax 		  A ? X                        	
0x70E : F0 80	call 200			 Call 200                	
0x710 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x711 : F0 80	call 200			 Call 200                	
0x713 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x714 : 8A 	tr A				 Jump A                       	
0x715 : 33 	lbmx 3		 BM ? 0x3                     	
0x716 : 8A 	tr A				 Jump A                       	
0x717 : F1 EC	call 72C			 Call 72C                	
0x719 : 32 	lbmx 2		 BM ? 0x2                     	
0x71A : 20 	lblx 0		 BL ? 0x0                     	
0x71B : 1F 	lax F		  A ? 0xF                      	
0x71C : 64 	exax 		  A ? X                        	
0x71D : C2 	trs 04				 Call 104                   	
0x71E : 64 	exax 		  A ? X                        	
0x71F : 0F 	adx F		  A += 0xF		 Skip if Cy set    	
0x720 : E1 0E	tl 40E				 Jump 40E                 	
0x722 : 64 	exax 		  A ? X                        	
0x723 : F0 8F	call 20F			 Call 20F                	
0x725 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x726 : F0 8F	call 20F			 Call 20F                	
0x728 : 78 	incb		 BL ++,		 Skip if BL == 0xF     	
0x729 : 9E 	tr 1E				 Jump 1E                     	
0x72A : 33 	lbmx 3		 BM ? 0x3                     	
0x72B : 9E 	tr 1E				 Jump 1E                     	
0x72C : 32 	lbmx 2		 BM ? 0x2                     	
0x72D : 20 	lblx 0		 BL ? 0x0                     	
0x72E : 1F 	lax F		  A ? 0xF                      	
0x72F : 64 	exax 		  A ? X                        	
0x730 : 64 	exax 		  A ? X                        	
0x731 : 0F 	adx F		  A += 0xF		 Skip if Cy set    	
0x732 : 7D 	rtn				 Return                        	
0x733 : 64 	exax 		  A ? X                        	
0x734 : 54 	exc 0		  M ? A, BM XOR 0              	
0x735 : 79 	coma		  A ? ~A                        	
0x736 : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x737 : 54 	exc 0		  M ? A, BM XOR 0              	
0x738 : 79 	coma		  A ? ~A                        	
0x739 : 58 	exci 0		  M ? A, BL++, BM XOR 0	 Skip if Cy	
0x73A : B0 	tr 30				 Jump 30                     	
0x73B : 33 	lbmx 3		 BM ? 0x3                     	
0x73C : B0 	tr 30				 Jump 30                     	
0x73D : 00 	nop		                                 	
0x73E : 00 	nop		                                 	
0x73F : 00 	nop		                                 	



0x800 : 00 	nop		                                 	
0x801 : 74 	in		  A ? Pj                          	
0x802 : 00 	nop		                                 	
0x803 : 4C 	tpb 0				 Skip if P[Bl].0 set         	
0x804 : 40 	rm 0		M.0 ? ClrBit                    	
0x805 : 4D 	tpb 1				 Skip if P[Bl].1 set         	
0x806 : 41 	rm 1		M.1 ? ClrBit                    	
0x807 : 4E 	tpb 2				 Skip if P[Bl].2 set         	
0x808 : 42 	rm 2		M.2 ? ClrBit                    	
0x809 : 4F 	tpb 3				 Skip if P[Bl].3 set         	
0x80A : 43 	rm 3		M.3 ? ClrBit                    	
0x80B : 00 	nop		                                 	
0x80C : 00 	nop		                                 	
0x80D : 8F 	tr F				 Jump F                       	
0x80E : 00 	nop		                                 	
0x80F : 00 	nop		                                 	
0x810 : 00 	nop		                                 	
0x811 : 00 	nop		                                 	
0x812 : 00 	nop		                                 	
0x813 : 00 	nop		                                 	
0x814 : 00 	nop		                                 	
0x815 : 00 	nop		                                 	
0x816 : 00 	nop		                                 	
0x817 : 00 	nop		                                 	
0x818 : 00 	nop		                                 	
0x819 : 00 	nop		                                 	
0x81A : 00 	nop		                                 	
0x81B : 00 	nop		                                 	
0x81C : 00 	nop		                                 	
0x81D : 00 	nop		                                 	
0x81E : 00 	nop		                                 	
0x81F : 00 	nop		                                 	
0x820 : 00 	nop		                                 	
0x821 : 00 	nop		                                 	
0x822 : 00 	nop		                                 	
0x823 : 00 	nop		                                 	
0x824 : 00 	nop		                                 	
0x825 : 00 	nop		                                 	
0x826 : 00 	nop		                                 	
0x827 : 00 	nop		                                 	
0x828 : 00 	nop		                                 	
0x829 : 00 	nop		                                 	
0x82A : 00 	nop		                                 	
0x82B : 00 	nop		                                 	
0x82C : 00 	nop		                                 	
0x82D : 00 	nop		                                 	
0x82E : 00 	nop		                                 	
0x82F : 00 	nop		                                 	
0x830 : 00 	nop		                                 	
0x831 : 00 	nop		                                 	
0x832 : 00 	nop		                                 	
0x833 : 00 	nop		                                 	
0x834 : 00 	nop		                                 	
0x835 : 00 	nop		                                 	
0x836 : 00 	nop		                                 	
0x837 : 00 	nop		                                 	
0x838 : 00 	nop		                                 	
0x839 : 00 	nop		                                 	
0x83A : 00 	nop		                                 	
0x83B : 00 	nop		                                 	
0x83C : 00 	nop		                                 	
0x83D : 00 	nop		                                 	
0x83E : 00 	nop		                                 	
0x83F : 00 	nop